-CakePHP running on PHP 7.4 (min PHP 5.6)
-Tải composer
-composer self-update (composer create-project --prefer-dist cakephp/app:"3.10.*" cms)
-bin\cake serverc

*Những folder quan trọng:
-config: database config, routes (cấu hình ở app_local.php)
-src: model/view/controller/Template
-webroot: css,js,images

-set() (controller) để chuyển dữ liệu sang Template 
-findBySlug (slud là 1 field trong model Acticle): a Dynamic Finder để tìm kiếm dữ liệu

-$controllerName = $this->request->getParam('controller');
-$parameters = $this->request->getAttribute('params');
-$this->request->getData()
    +$this->request->getData('MyModel.attachment'); # file đính kèm
-$this->request->getQuery('page'); # /posts/index?page=1&sort=title
    +$this->request->getQueryParams(); #get all query param
-$this->request->getUploadedFile('MyModel.attachment');

*Cấu hình 
-Cấu hình hệ thống sẽ được để ở config/app.php và config/app_local.php
-Biến môi trường để ở file config/.env


*Request flow
-request được gửi đến cakephp sẽ đi vào Cake/Routing/Router và Cake/Routing/Dispatcher và kết nối đến Config/routes để tìm đúng controller xử  lý
-request sẽ được đóng gói vào 1 request object 

*controller
-Mỗi 1 public function trong controller sẽ tương ứng với 1 url ngoaì ứng dụng
-Sử dụng $this->set() để trả về dữ liệu cho người dùng
-$this->render(): sẽ được gọi mặc định cuối function để render ra view, có thể chủ động gọi để render ra view (hay sử dụng trong ajax)
-$this->redirect: để redirect sang 1 trang khác
-$this->loadModel('Articles'); sử dụng để load 1 model của bảng khác không phải là default của controller
-Mỗi controller sẽ có 1 initializer mặc định để  khởi tạo dữ liệu, load component liên quan
-1 vài function có trong controller:
    +beforeFilter: sẽ được gọi trước mỗi action trong controller (kể cả trường hợp không có action) thường được sử dụng để kiểm tra quyền, session
    +beforeRender: Được gọi sau action, trước khi render view
    +afterFilter: được gọi cuối cùng trong controller
-Sẽ có 1 vài compoent có sẵn để  controller có thể load như là:
    +AuthComponent
    +Cookie
    +CSRF
    +Flash
    +Security
    +Pagination
    +Request handling

*Query builder
-find(): create query from table object
-select(): Lấy những field trong query set
    +select(['id', 'name'])
-order(): sắp xếp
    +order(["id" => "DESC"])
-distinct(): loại giá trị trùng lặp
-where(): Tìm kiếm
    +where(['id !=' => 1])
-toList(): convert object to array
-first(): select single row
-extract('title'): chỉ lấy dữ liệu title (không dùng chung với toList và toArray được)
    +sử  dụng chung với find('list') để lấy thêm dữ liệu id
-combine('id','title): lấy dữ liệu dạng [id=>title]
    +sử dụng chung với toArray()
-enableHydration(): result array instead entity
-map:
    map(function ($row) {
        $row->trimmedTitle = trim($row->title);
        return $row;
    })
-limit + page: để limit dữ liệu

-contain: load các dữ liệu từ bảng liên quan và tránh N+1 query
-matching được sử dụng để lọc kết quả từ bảng liên quan
-innerJoinWith: join bảng

**CRUD data
-Insert data:
    $query->insert(['title', 'body'])->values([
            'title' => 'First post',
            'body' => 'Some body text'
        ])->execute();
-Update data:
    $query->update()->set(['published' => true])->where(['id' => $id])->execute();
-Delete data:
    $query->delete()->where(['id' => $id])->execute();
-union data:
    $inReview = $articles->find()->where(['need_review' => true]);
    $unpublished = $articles->find()->where(['published' => false]);
    $unpublished->union($inReview);

-*query chỉ được thực hiện cho đến khi:
    +foreach, execute(), first(), all(), toList(), toArray()
-*Advanced condition (truy vấn nâng cao)
$query = $articles->find()
    ->where([
        'author_id' => 3,
        'OR' => [['view_count' => 2], ['view_count' => 3]],
    ]); 
=> SELECT * FROM articles WHERE author_id = 3 AND (view_count = 2 OR view_count = 3)


-Chạy dự án White Cross trên local và thử thêm 1 page mới
-Đọc docs CakePHP: controller, ORM (40%, đang đọc table object)